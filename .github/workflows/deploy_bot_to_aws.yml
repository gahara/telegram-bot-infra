name: "Publish to AWS"

on:
  push:
    tags:
      - "r*"
env:
  TF_VARS_telegram_token: ${{ secrets.TF_VAR_TELEGRAM_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ vars.TFBACKENDREGION }}
  NEED_RUN_CREATE_BUCKET: NO

jobs:
  deploy:
    name: "Deploy infrastructure to AWS"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: "Setup python and specific version"
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Check if corresponding bucket exists
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@master
        with:
          version: 2
      - run: |
          if aws s3api head-bucket --bucket ${{ vars.S3BUCKETNAME }} 2>& 1 | grep 'Not';
          then  echo "NEED_RUN_CREATE_BUCKET=YES" >> $GITHUB_ENV
          fi
      - run: |
          echo Will new bucket be created: ${{env.NEED_RUN_CREATE_BUCKET}}
        shell: bash
      - name: Deploy to AWS CloudFormation
        if: ${{ env.NEED_RUN_CREATE_BUCKET  == 'YES' }}
        continue-on-error: true
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ vars.S3STACKNAME}}
          template: ./iac/aws-cloudformation/create_s3.yaml
          parameter-overrides: "S3BucketName=${{ vars.S3BUCKETNAME }},S3Tag=${{ vars.S3TAG }}"

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.5
      - name: "Make shell script executable"
        run: chmod +x ./iac/tf-modules/api-resources/collect-env-params.sh

      - name: "Terraform init"
        working-directory: ./iac
        run: terraform -chdir=./tf-core init -upgrade=true -reconfigure -backend-config=../tf-vars/backend.tf

      - name: "Terraform validate"
        working-directory: ./iac
        run: terraform -chdir=./tf-core validate

      - name: "Terraform plan"
        working-directory: ./iac
        run: terraform -chdir=./tf-core plan -var-file=../tf-vars/params.tfvars


      - name: "Terraform apply"
        working-directory: ./iac
        run: terraform -chdir=./tf-core apply -var-file=../tf-vars/params.tfvars --auto-approve

